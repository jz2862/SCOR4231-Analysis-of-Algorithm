\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Problem \uppercase {i}}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Show that when $p = 1/n$, the probability our sample is good is larger than some positive constant (independent of n).}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Problem \uppercase {ii}}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}What is the running time of this algorithm?}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}What kind of algorithm is Randomized Approximate Median and why? What is the success probability of this algorithm?}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}How can you improve the success probability of the algorithm to over 99\%? What is the running time of the new algorithm?}{2}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Function Advanced-RAM$(S)$}}{2}}
\newlabel{alg1}{{1}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Problem \uppercase {iii}}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Suppose that in some round we have $k = \varepsilon n$ balls. At most how many balls should you expect to have in the next round?}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Assuming that everything proceeded according to expectation, prove that we would discard all the balls within O(log log n) rounds.}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Problem \uppercase {iv}}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Determine the probability that a fixed person i succeeds in accessing the computer during a specific step.}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}How would you set p to maximize the above probability?}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}For the choice of p in part(b), upper bound the probability that person i did not succeed to access the computer in any of the first t = en steps.}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}What is the number of steps t required so that the probability that person i did not succeed to access the computer in any of the first t steps is upper bounded by an inverse polynomial in n?}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}How many steps are required to guarantee that all people succeeded to access the computer with probability at least 1/n?}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Problem \uppercase {v}}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}What is the expected time to find a good partitioning element?}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}What is the expected time of Randomized Quicksort-v1 on a subproblem of size $|S|$, excluding the time spent on recursive calls?}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}We will say that a subproblem is of type j if its input consists of at most $n(\frac  {3}{4})^j$ and at least $n(\frac  {3}{4})^{j+1}$ items.}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.3.1}For a fixed j, how much time is spent on a subproblem of type j?}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.3.2}For a fixed j, how many subproblems of type j are there?}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.3.3}For a fixed j, how much time is spent on all subproblems of type j}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.4}What is the expected running time of Randomized Quicksort-v1?}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Problem \uppercase {vi}}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Use the ideas from the previous problem to design and analyze the expected running time of a recursive randomized algorithm that returns the k-th smallest number in a set S of n distinct integers, for any k.\\For example, for k = dn=2e, your algorithm will return the median item.}{8}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces Function kThSmallestNumber$(S,k)$}}{8}}
\newlabel{alg1}{{2}{8}}
